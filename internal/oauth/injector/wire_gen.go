// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	repository3 "go_online_course_v2/internal/admin/repository"
	usecase2 "go_online_course_v2/internal/admin/usecase"
	"go_online_course_v2/internal/oauth/delivery/http"
	"go_online_course_v2/internal/oauth/repository"
	usecase3 "go_online_course_v2/internal/oauth/usecase"
	repository2 "go_online_course_v2/internal/user/repository"
	"go_online_course_v2/internal/user/usecase"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializedService(db *gorm.DB) *http.OauthHandler {
	oauthClientRepository := repository.NewOauthClientRepository(db)
	oauthAccessTokenRepository := repository.NewOauthAccessTokenRepository(db)
	oauthRefreshTokenRepository := repository.NewOauthRefreshTokenRepository(db)
	userRepository := repository2.NewUserRepository(db)
	userUseCase := usecase.NewUserUseCase(userRepository)
	adminRepository := repository3.NewAdminRepository(db)
	adminUseCase := usecase2.NewAdminUseCase(adminRepository)
	oauthUseCase := usecase3.NewOauthUseCase(oauthClientRepository, oauthAccessTokenRepository, oauthRefreshTokenRepository, userUseCase, adminUseCase)
	oauthHandler := http.NewOauthHandler(oauthUseCase)
	return oauthHandler
}

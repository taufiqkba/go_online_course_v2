// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"go_online_course_v2/internal/admin/repository"
	"go_online_course_v2/internal/admin/usecase"
	repository3 "go_online_course_v2/internal/cart/repository"
	usecase2 "go_online_course_v2/internal/cart/usecase"
	"go_online_course_v2/internal/dashboard/delivery/http"
	usecase9 "go_online_course_v2/internal/dashboard/usecase"
	repository4 "go_online_course_v2/internal/discount/repository"
	usecase3 "go_online_course_v2/internal/discount/usecase"
	repository2 "go_online_course_v2/internal/order/repository"
	usecase7 "go_online_course_v2/internal/order/usecase"
	repository5 "go_online_course_v2/internal/order_detail/repository"
	usecase4 "go_online_course_v2/internal/order_detail/usecase"
	usecase5 "go_online_course_v2/internal/payment/usecase"
	repository6 "go_online_course_v2/internal/product/repository"
	usecase6 "go_online_course_v2/internal/product/usecase"
	repository7 "go_online_course_v2/internal/product_category/repository"
	repository8 "go_online_course_v2/internal/user/repository"
	usecase8 "go_online_course_v2/internal/user/usecase"
	"go_online_course_v2/pkg/media/cloudinary"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializedService(db *gorm.DB) *http.DashboardHandler {
	adminRepository := repository.NewAdminRepository(db)
	adminUseCase := usecase.NewAdminUseCase(adminRepository)
	orderRepository := repository2.NewOrderRepository(db)
	cartRepository := repository3.NewCartRepository(db)
	cartUseCase := usecase2.NewCartUseCase(cartRepository)
	discountRepository := repository4.NewDiscountRepository(db)
	discountUseCase := usecase3.NewDiscountUseCase(discountRepository)
	orderDetailRepository := repository5.NewOrderDetailRepository(db)
	orderDetailUseCase := usecase4.NewOrderDetailUseCase(orderDetailRepository)
	paymentUseCase := usecase5.NewPaymentUseCase()
	productRepository := repository6.NewProductRepository(db)
	productCategoryRepository := repository7.NewProductCategoryRepository(db)
	media := cloudinary.NewMediaUseCase()
	productUseCase := usecase6.NewProductUseCase(productRepository, productCategoryRepository, media)
	orderUseCase := usecase7.NewOrderUseCase(orderRepository, cartUseCase, discountUseCase, orderDetailUseCase, paymentUseCase, productUseCase)
	userRepository := repository8.NewUserRepository(db)
	userUseCase := usecase8.NewUserUseCase(userRepository)
	dashboardUseCase := usecase9.NewDashboardUseCase(adminUseCase, orderUseCase, productUseCase, userUseCase)
	dashboardHandler := http.NewDashboardHandler(dashboardUseCase)
	return dashboardHandler
}
